name: Build and Test

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '10.0.x'
        include-prerelease: true
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Run demonstration
      run: |
        echo "Running magic numbers demonstration..."
        dotnet run --project DemonstrationConsole --configuration Release --no-build
        echo "Demo completed successfully!"
    
    - name: Verify build artifacts
      run: |
        echo "Checking build outputs..."
        ls -la */bin/Release/net10.0/
        echo "All artifacts present!"

  build-matrix:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dotnet-version: ['10.0.x']
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        include-prerelease: true
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Run demo on ${{ matrix.os }}
      run: dotnet run --project DemonstrationConsole --configuration Release --no-build
    
    - name: Test clean build
      run: |
        dotnet clean
        dotnet build --configuration Release
        echo "Clean build successful on ${{ matrix.os }}"
